parameters:
  - name: resourceGroupName
    displayName: Resource Group Name
    type: string

  - name: ipAddress
    displayName: Public IP Address Name
    type: string

  - name: vmName
    displayName: Virtual Machine Name
    type: string   

trigger:
  - none  # Specify the branch to trigger the pipeline

pool:
   name: 'Azure Pipelines'

variables:
  ResourceGroupName: ${{ parameters.resourceGroupName }}
  IpAddress: ${{ parameters.ipAddress }}
  VmName: ${{ parameters.vmName }}

steps:

- script: 'terraform init'
  displayName: 'Terraform Init'

- script: 'terraform validate'
  displayName: 'Terraform Validate'

- script: 'terraform plan -var="resource_group_name"=$(ResourceGroupName) -var="public_ip_name"=$(IpAddress) -var="virtual_machine_name"=$(VmName) -var-file="myproject.dev.tfvars" '
  displayName: 'Terraform Plan'

- script: 'terraform apply  -var="resource_group_name"=$(ResourceGroupName) -var="public_ip_name"=$(IpAddress) -var="virtual_machine_name"=$(VmName) -var-file="myproject.dev.tfvars" -auto-approve'
  displayName: 'Terraform Apply'

# - script: 'terraform destroy  -var="resource_group_name"=$(ResourceGroupName) -var="public_ip_name"=$(IpAddress) -var="virtual_machine_name"=$(VmName) -var-file="myproject.dev.tfvars" -auto-approve'
#   displayName: 'Terraform destroy'