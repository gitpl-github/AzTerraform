parameters:
  - name: resourceGroupName
    displayName: Resource Group Name
    type: string
    default: 'myResourceGroup'

  - name: ipAddress
    displayName: Public IP Address Name
    type: string
    default: 'myIp'

  - name: vmName
    displayName: Virtual Machine Name
    type: string
    default: 'myVM'

trigger:
  - none  # Specify the branch to trigger the pipeline

pool:
   name: 'myselfhostedagent'

variables:
  ResourceGroupName: ${{ parameters.resourceGroupName }}
  IpAddress: ${{ parameters.ipAddress }}
  VmName: ${{ parameters.vmName }}

steps:

- script: |
    echo "Resource Group Name: $(ResourceGroupName)"
    echo "IP Address: $(IpAddress)"
    echo "VM Name: $(VmName)"
  displayName: 'Debug Variables'

# - script: 'terraform init'
#   displayName: 'Terraform Init'

# - script: 'terraform validate'
#   displayName: 'Terraform Validate'

# - script: 'terraform plan -var="resourceGroupName"=$(resource_group_name) -var="ipAddress"=$(public_ip_name) -var="vmName"=$(virtual_machine_name) -var-file="myproject.dev.tfvars" '
#   displayName: 'Terraform Plan'

# - script: 'terraform apply  -var="resourceGroupName"=$(resource_group_name) -var="ipAddress"=$(public_ip_name) -var="vmName"=$(virtual_machine_name) -var-file="myproject.dev.tfvars" '
#   displayName: 'Terraform Apply'

# - script: 'terraform destroy -var-file="myproject.dev.tfvars" -auto-approve'
#   displayName: 'Terraform destroy'